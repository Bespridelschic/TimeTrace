<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Black" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="Blue" xml:space="preserve">
    <value>Blue</value>
  </data>
  <data name="Calendar" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="CalendarAdding" xml:space="preserve">
    <value>Create a new calendar</value>
  </data>
  <data name="CalendarAddingError" xml:space="preserve">
    <value>The name for the new calendar is empty</value>
  </data>
  <data name="CalendarAddingErrorTitle" xml:space="preserve">
    <value>Error adding new calendar</value>
  </data>
  <data name="CalendarChangeError" xml:space="preserve">
    <value>Error changing data</value>
  </data>
  <data name="CalendarChanging" xml:space="preserve">
    <value>Editing a calendar</value>
  </data>
  <data name="CalendarChangingError" xml:space="preserve">
    <value>The name of the calendar you are changing is not filled</value>
  </data>
  <data name="CalendarChangingErrorTitle" xml:space="preserve">
    <value>Error changing calendar</value>
  </data>
  <data name="CalendarColor" xml:space="preserve">
    <value>Color of the calendar</value>
  </data>
  <data name="CalendarDescription" xml:space="preserve">
    <value>Short description of the calendar</value>
  </data>
  <data name="CalendarDescriptionTitle" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="CalendarName" xml:space="preserve">
    <value>Name of the new calendar</value>
  </data>
  <data name="CalendarNameTitle" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="CalendarWasRemovedNotification" xml:space="preserve">
    <value>Calendars with all projects and events inside were removed</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CascadingRemovalNotification" xml:space="preserve">
    <value>with all the projects and events inside was removed</value>
  </data>
  <data name="CascadingRemovalWarning" xml:space="preserve">
    <value>Delete will result in the loss of all projects and events inside the calendar!</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ConfirmAction" xml:space="preserve">
    <value>Confirm action</value>
  </data>
  <data name="ConfirmationRemoving" xml:space="preserve">
    <value>Are you sure you want to delete the calendar</value>
  </data>
  <data name="ConfirmRemove" xml:space="preserve">
    <value>Confirm removal</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="DarkBlue" xml:space="preserve">
    <value>Dark blue</value>
  </data>
  <data name="Green" xml:space="preserve">
    <value>Green</value>
  </data>
  <data name="Later" xml:space="preserve">
    <value>Later</value>
  </data>
  <data name="LightGreen" xml:space="preserve">
    <value>Light green</value>
  </data>
  <data name="LightPurple" xml:space="preserve">
    <value>Light purple</value>
  </data>
  <data name="OperationSuccess" xml:space="preserve">
    <value>Operation completed successfully</value>
  </data>
  <data name="Orange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="Pink" xml:space="preserve">
    <value>Pink</value>
  </data>
  <data name="Purple" xml:space="preserve">
    <value>Purple</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveConfirm" xml:space="preserve">
    <value>Are you sure that you want to delete calendars and all internal projects and events for:</value>
  </data>
  <data name="UndefinedErrorMessage" xml:space="preserve">
    <value>Unexpected error, try again later</value>
  </data>
  <data name="Yellow" xml:space="preserve">
    <value>Yellow</value>
  </data>
</root>