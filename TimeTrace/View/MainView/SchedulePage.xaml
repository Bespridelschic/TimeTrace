<Page
	x:Class="TimeTrace.View.MainView.SchedulePage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:advanced="using:TimeTrace.View.AdvancedControls"
	xmlns:converters="using:TimeTrace.View.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="using:TimeTrace.Model.Events"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d">

	<Page.Resources>
		<ResourceDictionary>
			<CollectionViewSource
				x:Name="cvs"
				IsSourceGrouped="True"
				Source="{x:Bind ViewModel.SortedCollection.Source, Mode=OneWay}" />

			<converters:FromNullableIntToIntConverter x:Key="fromNullableIntToIntConverter" />
			<converters:FromIntToSolidColorBrushConverter x:Key="fromIntToSolidColorBrushConverter" />
			<converters:FromUtcToLocalTimeConverter x:Key="fromUtcToLocalTimeConverter" />
			<converters:FromUtcToLocalTimeOnlyDateConverter x:Key="fromUtcToLocalTimeOnlyDateConverter" />
			<converters:FromIntToBoolConverter x:Key="fromIntToBoolConverter" />
			<converters:FromIntToVisibilityConverter x:Key="fromIntToVisibilityConverter" />
			<converters:FromIntToCollapseConverter x:Key="fromIntToCollapseConverter" />
			<Style TargetType="StackPanel">
				<Setter Property="Transitions">
					<Setter.Value>
						<TransitionCollection>
							<EntranceThemeTransition />
						</TransitionCollection>
					</Setter.Value>
				</Setter>
			</Style>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/ResourceDictionaries/MainDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Page.Resources>

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<SplitView
			Background="White"
			IsPaneOpen="{x:Bind ViewModel.IsFilterExpanded, Mode=TwoWay}"
			OpenPaneLength="370">

			<SplitView.Content>
				<Grid Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
					<ParallaxView
						Opacity="0.5"
						Source="{x:Bind MapEventsList}"
						VerticalShift="200">
						<Image Source="../../Assets/logo_Win.png" Stretch="UniformToFill" />
					</ParallaxView>

					<HyperlinkButton
						x:Uid="/ScheduleView/ProposalToCreateNewEvent"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Click="{x:Bind ViewModel.GoToCalendars}"
						FontSize="25"
						Visibility="{x:Bind ViewModel.MapEvents.Count, Mode=OneWay, Converter={StaticResource fromIntToCollapseConverter}}" />

					<ListView
						x:Name="MapEventsList"
						Padding="8,5,15,5"
						DoubleTapped="{x:Bind ViewModel.MoreAboutMapEvent}"
						ItemsSource="{x:Bind cvs.View, Mode=OneWay}"
						RightTapped="{x:Bind ViewModel.SelectItemOnRightClick}"
						SelectedIndex="{x:Bind ViewModel.SelectedMapEvent, Mode=TwoWay, Converter={StaticResource fromNullableIntToIntConverter}}"
						SelectionChanged="{x:Bind ViewModel.MultipleEventsSelection}"
						SelectionMode="{x:Bind ViewModel.MultipleSelection, Mode=TwoWay}"
						Visibility="{x:Bind ViewModel.MapEvents.Count, Mode=OneWay, Converter={StaticResource fromIntToVisibilityConverter}}">
						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="BorderBrush" Value="LightGray" />
								<Setter Property="BorderThickness" Value="0,0,0,.2" />
								<Setter Property="HorizontalContentAlignment" Value="Stretch" />
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.GroupStyle>
							<GroupStyle>
								<GroupStyle.HeaderTemplate>
									<DataTemplate x:DataType="advanced:GroupInfoList">
										<TextBlock
											FontSize="33"
											FontWeight="SemiLight"
											Text="{x:Bind Key, Converter={StaticResource fromUtcToLocalTimeOnlyDateConverter}}" />
									</DataTemplate>
								</GroupStyle.HeaderTemplate>
							</GroupStyle>
						</ListView.GroupStyle>
						<ListView.ItemTemplate>
							<DataTemplate x:DataType="local:MapEvent">
								<StackPanel>
									<Grid Margin="0,5,10,0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>

										<Ellipse
											Width="15"
											Height="15"
											VerticalAlignment="Center"
											Fill="{x:Bind Color, Converter={StaticResource fromIntToSolidColorBrushConverter}}" />

										<TextBlock
											Grid.Column="1"
											Margin="5,0,0,0"
											VerticalAlignment="Center"
											FontSize="26"
											FontWeight="SemiLight"
											Text="{x:Bind Name}"
											TextTrimming="WordEllipsis" />
									</Grid>

									<StackPanel Orientation="Horizontal">
										<TextBlock
											x:Uid="/ScheduleView/Time"
											Margin="0,0,0,2"
											FontSize="17"
											Foreground="LightSlateGray" />
										<TextBlock
											Margin="7,0,7,2"
											FontSize="17"
											Foreground="LightSlateGray"
											Text="{x:Bind Start, Converter={StaticResource fromUtcToLocalTimeConverter}}" />
										<TextBlock
											Margin="0,0,0,1"
											FontSize="17"
											Foreground="LightSlateGray"
											Text="-" />
										<TextBlock
											Margin="7,0,7,1"
											FontSize="17"
											Foreground="LightSlateGray"
											Text="{x:Bind End, Converter={StaticResource fromUtcToLocalTimeConverter}}" />
									</StackPanel>

									<TextBlock
										Margin="0,0,0,5"
										FontSize="18"
										MaxLines="2"
										Text="{x:Bind Description, TargetNullValue=Отсутствует}"
										TextTrimming="WordEllipsis"
										TextWrapping="WrapWholeWords" />
								</StackPanel>
							</DataTemplate>
						</ListView.ItemTemplate>
						<ListView.ContextFlyout>
							<MenuFlyout Placement="Bottom">
								<MenuFlyoutItem
									x:Uid="/ScheduleView/MoreDetails"
									Click="{x:Bind ViewModel.MoreAboutMapEvent}"
									Icon="Page" />
								<MenuFlyoutSeparator />
								<MenuFlyoutItem
									x:Uid="/ScheduleView/Edit"
									Click="{x:Bind ViewModel.MapEventEditAsync}"
									Icon="Edit" />
								<MenuFlyoutItem
									x:Uid="/ScheduleView/Remove"
									Click="{x:Bind ViewModel.MapEventRemove}"
									Icon="Delete" />
							</MenuFlyout>
						</ListView.ContextFlyout>
					</ListView>
				</Grid>
			</SplitView.Content>

			<SplitView.Pane>
				<Grid
					Background="{StaticResource ApplicationPageBackgroundThemeBrush}"
					BorderBrush="{StaticResource HostBackdropBrush}"
					BorderThickness="2">
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<ScrollViewer VerticalScrollBarVisibility="Auto">
						<StackPanel Padding="20,5">
							<TextBlock
								x:Uid="/ScheduleView/DateFiltration"
								Margin="0,10,0,15"
								HorizontalAlignment="Center"
								FontSize="28"
								FontWeight="SemiLight"
								TextWrapping="WrapWholeWords" />
							<CalendarView
								HorizontalAlignment="Center"
								SelectedBorderBrush="Red"
								SelectedDatesChanged="{x:Bind ViewModel.DateSelection}"
								SelectedForeground="Red"
								SelectionMode="Multiple" />

							<CheckBox
								x:Uid="/ScheduleView/HistoryEventsViewed"
								Width="300"
								Margin="0,5,0,0"
								HorizontalAlignment="Center"
								IsChecked="{x:Bind ViewModel.IsHistoryEventsViewed, Mode=TwoWay}" />

							<Button
								x:Uid="/ScheduleView/ResetSelectedDates"
								Width="298"
								Margin="0,10,0,10"
								HorizontalAlignment="Center"
								BorderBrush="{StaticResource HostBackdropBrush}"
								BorderThickness="2"
								Click="{x:Bind ViewModel.ResetSelectedDates}" />

							<MenuFlyoutSeparator />

							<TextBlock
								x:Uid="/ScheduleView/TimeFiltration"
								Margin="0,5,0,15"
								HorizontalAlignment="Stretch"
								FontSize="28"
								FontWeight="SemiLight"
								TextWrapping="WrapWholeWords" />

							<CheckBox x:Uid="/ScheduleView/IsTimeFiltration" IsChecked="{x:Bind ViewModel.IsTimeFiltered, Mode=TwoWay}" />

							<StackPanel
								Margin="0,0,0,10"
								HorizontalAlignment="Center"
								Orientation="Horizontal">
								<TimePicker
									x:Uid="/ScheduleView/StartFiltrationTime"
									MinWidth="150"
									HorizontalAlignment="Center"
									IsEnabled="{x:Bind ViewModel.IsTimeFiltered, Mode=OneWay}"
									Time="{x:Bind ViewModel.FilterStartTime, Mode=TwoWay}" />

								<TextBlock
									Margin="5,10"
									VerticalAlignment="Bottom"
									Text="-" />

								<TimePicker
									x:Uid="/ScheduleView/EndFiltrationTime"
									MinWidth="150"
									HorizontalAlignment="Center"
									IsEnabled="{x:Bind ViewModel.IsTimeFiltered, Mode=OneWay}"
									Time="{x:Bind ViewModel.FilterEndTime, Mode=TwoWay}" />

							</StackPanel>

							<MenuFlyoutSeparator />

							<TextBlock
								x:Uid="/ScheduleView/PublicEventsFiltration"
								Margin="0,5,0,15"
								HorizontalAlignment="Stretch"
								FontSize="28"
								FontWeight="SemiLight"
								TextWrapping="WrapWholeWords" />

							<CheckBox x:Uid="/ScheduleView/PublicEventsOnlyFiltration" IsChecked="{x:Bind ViewModel.IsPublicMapEventsOnly, Mode=TwoWay}" />

							<MenuFlyoutSeparator />

							<TextBlock
								x:Uid="/ScheduleView/LinkTo"
								Margin="0,5,0,15"
								HorizontalAlignment="Stretch"
								FontSize="28"
								FontWeight="SemiLight"
								TextWrapping="WrapWholeWords" />

							<AutoSuggestBox
								x:Uid="/ScheduleView/ContactBinding"
								Width="320"
								Margin="0,0,0,10"
								HorizontalAlignment="Left"
								ItemsSource="{x:Bind ViewModel.MapEventsPersonsSuggestList, Mode=TwoWay}"
								QueryIcon="Contact"
								Text="{x:Bind ViewModel.RequiredMapEventsPerson, Mode=TwoWay}"
								TextChanged="{x:Bind ViewModel.MapEventsPersonsFilter}" />

							<AutoSuggestBox
								x:Uid="/ScheduleView/PlaceBinding"
								Width="320"
								Margin="0,0,0,30"
								HorizontalAlignment="Left"
								ItemsSource="{x:Bind ViewModel.MapEventsPlacesSuggestList, Mode=TwoWay}"
								QueryIcon="Globe"
								Text="{x:Bind ViewModel.RequiredMapEventsLocation, Mode=TwoWay}"
								TextChanged="{x:Bind ViewModel.MapEventsPlacesFilter}" />

						</StackPanel>
					</ScrollViewer>

					<Grid Grid.Row="1">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>

						<Button
							x:Uid="/ScheduleView/AllFiltersReset"
							Grid.Row="1"
							Margin="20,5"
							HorizontalAlignment="Stretch"
							Background="{x:Bind SolidBrush}"
							Click="{x:Bind ViewModel.ResetAllFilters}"
							FontSize="18"
							Foreground="White" />

					</Grid>

				</Grid>
			</SplitView.Pane>

		</SplitView>

		<CommandBar Grid.Row="1" VerticalAlignment="Bottom">
			<CommandBar.Content>
				<StackPanel Margin="10,-5" Orientation="Horizontal">
					<TextBlock x:Uid="/ScheduleView/EventsSearching" />
					<AutoSuggestBox
						x:Uid="/ScheduleView/EventsSearchingPlaceholder"
						Width="250"
						Margin="10,13,10,10"
						ItemsSource="{x:Bind ViewModel.SearchSuggestions, Mode=OneWay}"
						QueryIcon="Find"
						QuerySubmitted="{x:Bind ViewModel.SearchRequest}"
						Text="{x:Bind ViewModel.SearchTerm, Mode=TwoWay}"
						TextChanged="{x:Bind ViewModel.DynamicSearch}" />
				</StackPanel>
			</CommandBar.Content>

			<AppBarButton
				x:Uid="/ScheduleView/EventsFiltersCall"
				Click="{x:Bind ViewModel.ExpandFilterPage}"
				Icon="Filter" />
			<AppBarButton
				x:Uid="/ScheduleView/GetPublicEvents"
				Click="{x:Bind ViewModel.GetPublicEventsAsync}"
				Icon="BackToWindow"
				IsEnabled="{x:Bind ViewModel.InternetFeaturesEnable, Mode=OneWay}" />
			<AppBarToggleButton
				x:Uid="/ScheduleView/EventsRemove"
				Click="{x:Bind ViewModel.EventsRemoveAsync}"
				Icon="Delete"
				IsEnabled="{x:Bind ViewModel.MapEvents.Count, Mode=OneWay, Converter={StaticResource fromIntToBoolConverter}}" />
		</CommandBar>

	</Grid>
</Page>