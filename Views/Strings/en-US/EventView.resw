<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AfterOneDate.Content" xml:space="preserve">
    <value>In one day</value>
  </data>
  <data name="CountAsEnd.OffContent" xml:space="preserve">
    <value>Finish after quantity</value>
  </data>
  <data name="CountAsEnd.OnContent" xml:space="preserve">
    <value>Ending after quantity</value>
  </data>
  <data name="CustomDays.Text" xml:space="preserve">
    <value>Days of the week</value>
  </data>
  <data name="CustomRepeat.Content" xml:space="preserve">
    <value>Custom Variant</value>
  </data>
  <data name="DateAsEnd.OffContent" xml:space="preserve">
    <value>Finish after quantity</value>
  </data>
  <data name="DateAsEnd.OnContent" xml:space="preserve">
    <value>Finish by date</value>
  </data>
  <data name="EndDate.Header" xml:space="preserve">
    <value>Expiration date*</value>
  </data>
  <data name="EndDate.PlaceholderText" xml:space="preserve">
    <value>Expiration date</value>
  </data>
  <data name="EndDate.ToolTipService.ToolTip" xml:space="preserve">
    <value>Date to which the event will be tied</value>
  </data>
  <data name="EndRepetitionCount.PlaceholderText" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="EndRepetitionCount.ToolTipService.ToolTip" xml:space="preserve">
    <value>Number of repetitions. The maximum number of repetitions is 999</value>
  </data>
  <data name="EndRepetitionDate.PlaceholderText" xml:space="preserve">
    <value>Last Date</value>
  </data>
  <data name="EndRepetitionDate.ToolTipService.ToolTip" xml:space="preserve">
    <value>Event end date</value>
  </data>
  <data name="EndTime.Header" xml:space="preserve">
    <value>End time</value>
  </data>
  <data name="EndTime.ToolTipService.ToolTip" xml:space="preserve">
    <value>Duration of the event to be created</value>
  </data>
  <data name="EventContact.Header" xml:space="preserve">
    <value>Contact name</value>
  </data>
  <data name="EventContact.PlaceholderText" xml:space="preserve">
    <value>The person associated with the event</value>
  </data>
  <data name="EventContact.ToolTipService.ToolTip" xml:space="preserve">
    <value>The name of the person to whom the event is attached</value>
  </data>
  <data name="EventDescription.Header" xml:space="preserve">
    <value>Event Description</value>
  </data>
  <data name="EventDescription.PlaceholderText" xml:space="preserve">
    <value>Set the description for the event</value>
  </data>
  <data name="EventDescription.ToolTipService.ToolTip" xml:space="preserve">
    <value>Event Description</value>
  </data>
  <data name="EventName.Header" xml:space="preserve">
    <value>Event name*</value>
  </data>
  <data name="EventName.PlaceholderText" xml:space="preserve">
    <value>Set the name of the event</value>
  </data>
  <data name="EventName.ToolTipService.ToolTip" xml:space="preserve">
    <value>Event name displayed in the calendar</value>
  </data>
  <data name="EventPlace.Header" xml:space="preserve">
    <value>Event Location</value>
  </data>
  <data name="EventPlace.PlaceholderText" xml:space="preserve">
    <value>Select the place of the event</value>
  </data>
  <data name="EventPlace.ToolTipService.ToolTip" xml:space="preserve">
    <value>The place to be attached to an event</value>
  </data>
  <data name="EveryDate.Content" xml:space="preserve">
    <value>Everyday</value>
  </data>
  <data name="ForBegining.Content" xml:space="preserve">
    <value>At beginning</value>
  </data>
  <data name="ForDateStart.Content" xml:space="preserve">
    <value>Early in the day</value>
  </data>
  <data name="ForFifteenMinutes.Content" xml:space="preserve">
    <value>In 15 minutes</value>
  </data>
  <data name="ForFiveMinutes.Content" xml:space="preserve">
    <value>In 5 minutes</value>
  </data>
  <data name="ForOneDay.Content" xml:space="preserve">
    <value>In 1 day</value>
  </data>
  <data name="ForOneHour.Content" xml:space="preserve">
    <value>In 1 hour</value>
  </data>
  <data name="ForOneMinute.Content" xml:space="preserve">
    <value>In a minute</value>
  </data>
  <data name="ForThirtyMinutes.Content" xml:space="preserve">
    <value>In 30 minutes</value>
  </data>
  <data name="ForTwelveHours.Content" xml:space="preserve">
    <value>In 12 hours</value>
  </data>
  <data name="Friday.Content" xml:space="preserve">
    <value>Fr.</value>
  </data>
  <data name="Friday.ToolTipService.ToolTip" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="IsAllDay.Header" xml:space="preserve">
    <value>All day</value>
  </data>
  <data name="IsAllDay.OffContent" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="IsAllDay.OnContent" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="IsPublic.Content" xml:space="preserve">
    <value>Available for my contacts</value>
  </data>
  <data name="IsPublic.ToolTipService.ToolTip" xml:space="preserve">
    <value>When selected, all people from the contact list can see the event being created</value>
  </data>
  <data name="LookInside.Header" xml:space="preserve">
    <value>Look inside</value>
  </data>
  <data name="Monday.Content" xml:space="preserve">
    <value>Mo.</value>
  </data>
  <data name="Monday.ToolTipService.ToolTip" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="NoRepetition.Content" xml:space="preserve">
    <value>Without repetition</value>
  </data>
  <data name="Notification.Header" xml:space="preserve">
    <value>Event notification</value>
  </data>
  <data name="OnceMonth.Content" xml:space="preserve">
    <value>Once a month</value>
  </data>
  <data name="OnceWeek.Content" xml:space="preserve">
    <value>Once a week</value>
  </data>
  <data name="OnceYear.Content" xml:space="preserve">
    <value>Once a year</value>
  </data>
  <data name="PageTitle.Text" xml:space="preserve">
    <value>Calendar events</value>
  </data>
  <data name="RepetitionMode.Header" xml:space="preserve">
    <value>Repeat the event</value>
  </data>
  <data name="RepetitionMode.PlaceholderText" xml:space="preserve">
    <value>Without repetition</value>
  </data>
  <data name="RepetitionMode.ToolTipService.ToolTip" xml:space="preserve">
    <value>How often will a reminder</value>
  </data>
  <data name="RequiredFields.Text" xml:space="preserve">
    <value>* - required fields</value>
  </data>
  <data name="Saturday.Content" xml:space="preserve">
    <value>Sa.</value>
  </data>
  <data name="Saturday.ToolTipService.ToolTip" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="StartDate.Header" xml:space="preserve">
    <value>Start date*</value>
  </data>
  <data name="StartDate.PlaceholderText" xml:space="preserve">
    <value>The date of the beginning</value>
  </data>
  <data name="StartDate.ToolTipService.ToolTip" xml:space="preserve">
    <value>Date to which the event will be tied</value>
  </data>
  <data name="StartTime.Header" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="StartTime.ToolTipService.ToolTip" xml:space="preserve">
    <value>The time to which the event will be tied</value>
  </data>
  <data name="Sunday.Content" xml:space="preserve">
    <value>Su.</value>
  </data>
  <data name="Sunday.ToolTipService.ToolTip" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Thursday.Content" xml:space="preserve">
    <value>Th.</value>
  </data>
  <data name="Thursday.ToolTipService.ToolTip" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Tuesday.Content" xml:space="preserve">
    <value>Tu.</value>
  </data>
  <data name="Tuesday.ToolTipService.ToolTip" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="Wednesday.Content" xml:space="preserve">
    <value>We.</value>
  </data>
  <data name="Wednesday.ToolTipService.ToolTip" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="WinTenCalendarBinding.Content" xml:space="preserve">
    <value>Install in Windows Calendar 10</value>
  </data>
  <data name="WinTenCalendarBinding.ToolTipService.ToolTip" xml:space="preserve">
    <value>When selected, this event will also be set in the Windows Calendar 10</value>
  </data>
</root>